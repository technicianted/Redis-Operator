# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/amadeusitgroup/redis-operator' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version

    make setup
    make test

    sudo make TAG=$(Build.BuildId)
    
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- task: Docker@2
  displayName: Login to CR
  inputs:
    command: login
    containerRegistry: $(DockerRegistryConnectionID)

- task: Docker@2
  displayName: Push docker image
  inputs: 
    command: push
    repository: $(DockerRepository)
    tags: |
      $(Build.BuildId)

- task: Docker@2
  displayName: Logout from CR
  inputs: 
    command: logout
    containerRegistry: $(DockerRegistryConnectionID)
